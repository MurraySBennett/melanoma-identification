group_by(pID, condition, stimulus) %>%
summarise(
accuracy_per_participant = mean(correct),
.groups = 'drop'
) %>%
group_by(condition, stimulus) %>%
summarise(
mean_accuracy = mean(accuracy_per_participant),
se_accuracy = sd(accuracy_per_participant) / sqrt(n()),
.groups = 'drop'
) %>%
mutate(stimulus = factor(stimulus, levels = c("ll", "hl", "lh", "hh")))
global_summary_data <- data %>%
filter(response != "") %>%
group_by(pID, condition) %>%
summarise(
accuracy_per_participant_overall = mean(correct),
.groups = 'drop'
) %>%
group_by(condition) %>%
summarise(
global_mean = mean(accuracy_per_participant_overall),
global_se = sd(accuracy_per_participant_overall) / sqrt(n()),
.groups = 'drop'
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "lightblue", color = "black", stroke = 0.5) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "black", linewidth = 0.8) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "red", color = "black", stroke = 1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "red", linewidth = 1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "black", stroke = 0.5) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "black", linewidth = 0.8) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "black", stroke = 1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "salmon", linewidth = 1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 2, shape = 21, fill = "skyblue", color = "black", stroke = 0.5) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "black", linewidth = 0.8) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "black", stroke = 1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "salmon", linewidth = 1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "gray", stroke = 0.5) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "gray", linewidth = 0.8) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "gray", stroke = 1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "salmon", linewidth = 1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "darkgray", linewidth = 0.8) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "gray", stroke = 0.5) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "salmon", linewidth = 1) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "gray", stroke = 1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "darkgray", linewidth = 0.8) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "darkgray", stroke = 0.5) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "salmon", linewidth = 1) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "darkgray", stroke = 1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "darkgray", linewidth = 0.8) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "darkgray", stroke = 0.1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "salmon", linewidth = 1) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "darkgray", stroke = 1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "darkgray", linewidth = 0.8) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "darkgray", stroke = 0.1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "salmon", linewidth = 1) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "darkgray", stroke = 0.1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "darkgray", linewidth = 0.8) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "darkgray", stroke = 0.1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "darkgray", linewidth = 0.8) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 4, shape = 23, fill = "salmon", color = "darkgray", stroke = 0.1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggplot(summary_data, aes(x = stimulus, y = mean_accuracy, fill = stimulus)) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.2, position = position_dodge(width = 0.9), color = "darkgray", linewidth = 0.8) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "skyblue", color = "darkgray", stroke = 0.1) +
geom_errorbar(data = global_summary_data,
aes(x = 2.5, ymin = global_mean - global_se, ymax = global_mean + global_se),
inherit.aes = FALSE,
width = 0.3, color = "darkgray", linewidth = 0.8) +
geom_point(data = global_summary_data,
aes(x = 2.5, y = global_mean),
inherit.aes = FALSE,
size = 3, shape = 23, fill = "salmon", color = "darkgray", stroke = 0.1) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
x = "Stimulus level",
y = "Mean Accuracy"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1
)
ggsave(here("grt", "figures", paste0("stimulus_acc_", min_acc, ".png")), width = 10, height = 4)
{
participant_marginal_response_freq <- data %>%
filter(response != "") %>% # Ensure to filter out empty responses if your data has them
mutate(
# Extract response for Dimension 1 (e.g., 'h' from 'hh' or 'hl')
resp_dim1 = substr(response, 1, 1),
# Extract response for Dimension 2 (e.g., 'h' from 'hh' or 'lh')
resp_dim2 = substr(response, 2, 2)
) %>%
group_by(pID, condition) %>% # Group by participant and condition
summarise(
n_trials = n(), # Total trials for this participant/condition
# Count how often 'h' or 'l' was responded for each dimension
count_D1_H = sum(resp_dim1 == "h"),
count_D1_L = sum(resp_dim1 == "l"),
count_D2_H = sum(resp_dim2 == "h"),
count_D2_L = sum(resp_dim2 == "l"),
.groups = 'drop'
) %>%
mutate(
# Calculate frequencies
freq_D1_H = count_D1_H / n_trials,
freq_D1_L = count_D1_L / n_trials,
freq_D2_H = count_D2_H / n_trials,
freq_D2_L = count_D2_L / n_trials
) %>%
# Select only the frequency columns and reshape into a long format
select(pID, condition, starts_with("freq_")) %>%
pivot_longer(
cols = starts_with("freq_"),
names_to = "response_type", # New column for the type of response (e.g., freq_D1_H)
values_to = "frequency"      # New column for the calculated frequency
) %>%
# Extract Dimension and Level information for plotting labels
mutate(
dimension = case_when(
grepl("D1", response_type) ~ "Dimension 1 Response",
grepl("D2", response_type) ~ "Dimension 2 Response"
),
level = case_when(
grepl("_H", response_type) ~ "H",
grepl("_L", response_type) ~ "L"
),
# Create a factor for x-axis ordering and consistent labels
response_category = factor(paste0(dimension, " (Level ", level, ")"),
levels = c("Dimension 1 Response (Level H)", "Dimension 1 Response (Level L)",
"Dimension 2 Response (Level H)", "Dimension 2 Response (Level L)"))
)
# 2. Calculate group-level mean and SE for plotting
bias_summary_data <- participant_marginal_response_freq %>%
group_by(condition, response_category) %>% # Group by condition and the response category
summarise(
mean_frequency = mean(frequency),
se_frequency = sd(frequency) / sqrt(n()),
.groups = 'drop'
)
# Print the summarized bias data (optional, for checking)
print("Response Bias Summary Data (Mean Frequency +/- SE per Condition & Response Type):")
print(bias_summary_data)
print("\n")
# --- NEW: Create the Response Bias Plot ---
bias_plot <- ggplot(bias_summary_data, aes(x = response_category, y = mean_frequency, fill = response_category)) +
geom_point(stat = "identity", position = position_dodge(width = 0.9), size = 3, shape = 21, fill = "orange", color = "black", stroke = 0.5) +
geom_errorbar(aes(ymin = mean_frequency - se_frequency, ymax = mean_frequency + se_frequency),
width = 0.2, position = position_dodge(width = 0.9), color = "black", linewidth = 0.8) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
title = "Response Bias (Marginal Frequencies) by Condition",
x = "Response Category",
y = "Mean Response Frequency"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
# For x-axis, using 'response_category' which is already a factor with descriptive levels
# So, no need for scale_x_discrete(labels = toupper) here unless you want ALL CAPS for entire string
scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 10)) + # Wrap long labels if needed
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none", # No legend needed as fill is mapped to x-axis
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1 # Makes each subplot panel square
)
}
print(bias_plot)
{
Okay, that's a much clearer definition for the "response bias" plot, and yes, it makes perfect sense in the context of analyzing overall response patterns!
{
response_frequency_data <- data %>%
filter(response != "") %>% # Keep this filter for valid responses
group_by(pID, condition) %>% # Group by participant and condition to get total trials for normalization
mutate(total_trials_per_pid_condition = n()) %>%
ungroup() %>% # Ungroup to allow re-grouping by response for counting
group_by(pID, condition, response) %>% # Now group by participant, condition, AND specific response type
summarise(
count_response = n(), # Count how many times each specific response (HH, HL, etc.) was given
total_trials = first(total_trials_per_pid_condition), # Get the total trials for that pID/condition
.groups = 'drop'
) %>%
mutate(
frequency = count_response / total_trials # Calculate the frequency (proportion)
)
bias_summary_data_simple <- response_frequency_data %>%
group_by(condition, response) %>%
summarise(
mean_frequency = mean(frequency),
se_frequency = sd(frequency) / sqrt(n()),
.groups = 'drop'
) %>%
mutate(response = factor(response, levels = c("ll", "hl", "lh", "hh")))
response_freq_plot <- ggplot(bias_summary_data_simple, aes(x = response, y = mean_frequency, fill = response)) +
geom_point(stat = "identity", position = position_dodge(width = 0.9),
size = 3, shape = 21, fill = "green", color = "black", stroke = 0.5) + # Distinct point style
geom_errorbar(aes(ymin = mean_frequency - se_frequency, ymax = mean_frequency + se_frequency),
width = 0.2, position = position_dodge(width = 0.9), color = "black", linewidth = 0.8) +
facet_wrap(~ condition, scales = "fixed", ncol = 3, labeller = as_labeller(toupper)) +
labs(
title = "Overall Response Frequencies by Condition", # Specific plot title
x = "Response Type", # X-axis label
y = "Mean Response Frequency"
) +
scale_y_continuous(limits = c(0, 1), breaks = c(0, 0.25, 0.5, 0.75, 1)) +
scale_x_discrete(labels = toupper) + # Capitalize X-axis tick labels (e.g., "HH", "LL")
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10), # Keep angle for these labels
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 12, face = "bold"),
legend.position = "none", # No legend needed as fill is mapped to x-axis
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
aspect.ratio = 1 # Keeps each subplot panel square
)
ggsave(here("grt", "figures", paste0("response_frequencies_overall_", min_acc, ".png")), plot = response_freq_plot, width = 10, height = 4)
}
print(response_freq_plot)
